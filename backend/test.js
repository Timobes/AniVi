// В Node.js при использовании библиотеки `pg` (PostgreSQL клиент) вы можете проверить роль пользователя, используя запрос к информационной схеме PostgreSQL. Вот пример использования:
//
//     javascript
// const { Client } = require('pg');
//
// const client = new Client({
//     user: 'username',
//     host: 'localhost',
//     database: 'mydb',
//     password: 'mypassword',
//     port: 5432,
// });
//
// client.connect();
//
// client.query('SELECT rolsuper, rolcreaterole, rolcreatedb FROM pg_roles WHERE rolname = $1', ['username'], (err, res) => {
//     if (err) {
//         console.error(err);
//     } else {
//         console.log(res.rows);
//     }
//     client.end();
// });
//
//
//
// В этом примере мы выполняем запрос к информационной схеме `pg_roles`, чтобы получить информацию о ролях пользователей. Вы можете заменить 'username' на имя пользователя, роль которого вы хотите проверить. В результате выполнения этого кода вы получите информацию о роли пользователя, включая флаги, указывающие, имеет ли пользователь суперпользовательские привилегии, права создавать роли, права создавать базы данных и т. д.
//
//     Убедитесь, что у вас есть соответствующие права доступа к информационной схеме для выполнения этого запроса.


//
// Чтобы добавить роль к пользователю в PostgreSQL с использованием Node.js и библиотеки `pg`, вам нужно выполнить SQL-запрос, который изменит роли пользователя в базе данных. Вот пример того, как это можно сделать:
//
//     javascript
// const { Client } = require('pg');
//
// const client = new Client({
//     user: 'username',
//     host: 'localhost',
//     database: 'mydb',
//     password: 'mypassword',
//     port: 5432,
// });
//
// client.connect();
//
// // Замените `new_role` на имя роли, которую вы хотите добавить, и `username` на имя пользователя, которому вы хотите добавить эту роль.
// client.query(
//     'GRANT new_role TO username',
//     (err, res) => {
//         if (err) {
//             console.error(err);
//         } else {
//             console.log('Роль успешно добавлена пользователю.');
//         }
//         client.end();
//     }
// );
//
//
//
// В этом примере мы используем запрос `GRANT` для добавления роли к пользователю. Убедитесь, что у вас есть соответствующие права доступа к базе данных для выполнения этой операции. Вы также должны заменить `new_role` на имя роли, которую вы хотите добавить, и `username` на имя пользователя, которому вы хотите добавить эту роль.
//
//     Не забудьте обработать возможные ошибки при выполнении запроса в своем реальном приложении.